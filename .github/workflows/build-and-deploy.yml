name: Build and Deploy to EKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create package.json
      run: |
        echo '{
          "name": "package.json",
          "version": "1.0.0",
          "scripts": {
            "start": "node app.js",
            "build": "webpack --mode production"
          },
          "dependencies": {
            "express": "^4.17.1"
          },
          "devDependencies": {
            "webpack": "^5.0.0",
            "webpack-cli": "^4.0.0"
          }
        }' > package.json

    - name: Display package.json
      run: cat package.json

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest .

    - name: Push Docker image
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Update Kubernetes deployment
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: "latest"
        CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
        kubectl set image deployment/my-deployment my-container=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        kubectl apply -f deployment.yml
